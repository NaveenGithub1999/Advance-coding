Given an integer array coins[ ] of size N representing different denominations of currency and an integer sum, 
find the number of ways you can make sum by using different combinations from coins[ ].  
Note: Assume that you have an infinite supply of each type of coin. 


Example 1:

Input:
sum = 4 , 
N = 3
coins[] = {1,2,3}
Output: 4
Explanation: Four Possible ways are:
{1,1,1,1},{1,1,2},{2,2},{1,3}.

**********************************************************************************************
class Solution:
    def count(self, coins, N, Sum):
        # code here 
        table = [0 for k in range(Sum+1)]
 
    # Base case (If given value is 0)
        table[0] = 1
 
    # Pick all coins one by one and update the table[] values
    # after the index greater than or equal to the value of the
    # picked coin
        for i in range(0, N):
            for j in range(coins[i], Sum+1):
                table[j] += table[j-coins[i]]
 
        return table[Sum]
